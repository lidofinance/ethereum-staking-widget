export const STG_COLLECTOR_ABI = [
  {
    inputs: [
      { internalType: 'address', name: 'owner_', type: 'address' },
      { internalType: 'address', name: 'oracle_', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ETH',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'USD',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bufferSize',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'contract Vault', name: 'vault', type: 'address' },
      {
        components: [
          {
            internalType: 'address',
            name: 'baseAssetFallback',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'oracleUpdateInterval',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'redeemHandlingInterval',
            type: 'uint256',
          },
        ],
        internalType: 'struct Collector.Config',
        name: 'config',
        type: 'tuple',
      },
    ],
    name: 'collect',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'vault', type: 'address' },
          { internalType: 'address', name: 'baseAsset', type: 'address' },
          { internalType: 'address[]', name: 'assets', type: 'address[]' },
          { internalType: 'uint8[]', name: 'assetDecimals', type: 'uint8[]' },
          { internalType: 'uint256[]', name: 'assetPrices', type: 'uint256[]' },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'bool', name: 'isDepositQueue', type: 'bool' },
              { internalType: 'bool', name: 'isPausedQueue', type: 'bool' },
              { internalType: 'bool', name: 'isSignatureQueue', type: 'bool' },
              {
                internalType: 'uint256',
                name: 'pendingValue',
                type: 'uint256',
              },
              { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
            ],
            internalType: 'struct Collector.QueueInfo[]',
            name: 'queues',
            type: 'tuple[]',
          },
          { internalType: 'uint256', name: 'totalLP', type: 'uint256' },
          { internalType: 'uint256', name: 'limitLP', type: 'uint256' },
          { internalType: 'uint256', name: 'accountLP', type: 'uint256' },
          { internalType: 'uint256', name: 'totalBase', type: 'uint256' },
          { internalType: 'uint256', name: 'limitBase', type: 'uint256' },
          { internalType: 'uint256', name: 'accountBase', type: 'uint256' },
          { internalType: 'uint256', name: 'lpPriceBase', type: 'uint256' },
          { internalType: 'uint256', name: 'totalUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'limitUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'accountUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'lpPriceUSD', type: 'uint256' },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'uint256', name: 'shares', type: 'uint256' },
              { internalType: 'uint256', name: 'assets', type: 'uint256' },
              { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
              { internalType: 'uint256', name: 'eta', type: 'uint256' },
            ],
            internalType: 'struct Collector.Request[]',
            name: 'deposits',
            type: 'tuple[]',
          },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'uint256', name: 'shares', type: 'uint256' },
              { internalType: 'uint256', name: 'assets', type: 'uint256' },
              { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
              { internalType: 'uint256', name: 'eta', type: 'uint256' },
            ],
            internalType: 'struct Collector.Request[]',
            name: 'withdrawals',
            type: 'tuple[]',
          },
          { internalType: 'uint256', name: 'blockNumber', type: 'uint256' },
          { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
        ],
        internalType: 'struct Collector.Response',
        name: 'r',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'user', type: 'address' },
      { internalType: 'address[]', name: 'vaults', type: 'address[]' },
      {
        components: [
          {
            internalType: 'address',
            name: 'baseAssetFallback',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'oracleUpdateInterval',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'redeemHandlingInterval',
            type: 'uint256',
          },
        ],
        internalType: 'struct Collector.Config[]',
        name: 'configs',
        type: 'tuple[]',
      },
    ],
    name: 'collect',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'vault', type: 'address' },
          { internalType: 'address', name: 'baseAsset', type: 'address' },
          { internalType: 'address[]', name: 'assets', type: 'address[]' },
          { internalType: 'uint8[]', name: 'assetDecimals', type: 'uint8[]' },
          { internalType: 'uint256[]', name: 'assetPrices', type: 'uint256[]' },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'bool', name: 'isDepositQueue', type: 'bool' },
              { internalType: 'bool', name: 'isPausedQueue', type: 'bool' },
              { internalType: 'bool', name: 'isSignatureQueue', type: 'bool' },
              {
                internalType: 'uint256',
                name: 'pendingValue',
                type: 'uint256',
              },
              { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
            ],
            internalType: 'struct Collector.QueueInfo[]',
            name: 'queues',
            type: 'tuple[]',
          },
          { internalType: 'uint256', name: 'totalLP', type: 'uint256' },
          { internalType: 'uint256', name: 'limitLP', type: 'uint256' },
          { internalType: 'uint256', name: 'accountLP', type: 'uint256' },
          { internalType: 'uint256', name: 'totalBase', type: 'uint256' },
          { internalType: 'uint256', name: 'limitBase', type: 'uint256' },
          { internalType: 'uint256', name: 'accountBase', type: 'uint256' },
          { internalType: 'uint256', name: 'lpPriceBase', type: 'uint256' },
          { internalType: 'uint256', name: 'totalUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'limitUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'accountUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'lpPriceUSD', type: 'uint256' },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'uint256', name: 'shares', type: 'uint256' },
              { internalType: 'uint256', name: 'assets', type: 'uint256' },
              { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
              { internalType: 'uint256', name: 'eta', type: 'uint256' },
            ],
            internalType: 'struct Collector.Request[]',
            name: 'deposits',
            type: 'tuple[]',
          },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'uint256', name: 'shares', type: 'uint256' },
              { internalType: 'uint256', name: 'assets', type: 'uint256' },
              { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
              { internalType: 'uint256', name: 'eta', type: 'uint256' },
            ],
            internalType: 'struct Collector.Request[]',
            name: 'withdrawals',
            type: 'tuple[]',
          },
          { internalType: 'uint256', name: 'blockNumber', type: 'uint256' },
          { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
        ],
        internalType: 'struct Collector.Response[]',
        name: 'responses',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'queue', type: 'address' },
      { internalType: 'uint256', name: 'assets', type: 'uint256' },
      { internalType: 'address', name: 'account', type: 'address' },
      {
        components: [
          {
            internalType: 'address',
            name: 'baseAssetFallback',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'oracleUpdateInterval',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'redeemHandlingInterval',
            type: 'uint256',
          },
        ],
        internalType: 'struct Collector.Config',
        name: 'config',
        type: 'tuple',
      },
    ],
    name: 'getDepositParams',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'isDepositPossible', type: 'bool' },
          {
            internalType: 'bool',
            name: 'isDepositorWhitelisted',
            type: 'bool',
          },
          { internalType: 'bool', name: 'isMerkleProofRequired', type: 'bool' },
          { internalType: 'address', name: 'asset', type: 'address' },
          { internalType: 'uint256', name: 'shares', type: 'uint256' },
          { internalType: 'uint256', name: 'sharesUSDC', type: 'uint256' },
          { internalType: 'uint256', name: 'assets', type: 'uint256' },
          { internalType: 'uint256', name: 'assetsUSDC', type: 'uint256' },
          { internalType: 'uint256', name: 'eta', type: 'uint256' },
        ],
        internalType: 'struct Collector.DepositParams',
        name: 'r',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'shares', type: 'uint256' },
      { internalType: 'address', name: 'queue', type: 'address' },
      {
        components: [
          {
            internalType: 'address',
            name: 'baseAssetFallback',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'oracleUpdateInterval',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'redeemHandlingInterval',
            type: 'uint256',
          },
        ],
        internalType: 'struct Collector.Config',
        name: 'config',
        type: 'tuple',
      },
    ],
    name: 'getWithdrawalParams',
    outputs: [
      {
        components: [
          { internalType: 'bool', name: 'isWithdrawalPossible', type: 'bool' },
          { internalType: 'address', name: 'asset', type: 'address' },
          { internalType: 'uint256', name: 'shares', type: 'uint256' },
          { internalType: 'uint256', name: 'sharesUSDC', type: 'uint256' },
          { internalType: 'uint256', name: 'assets', type: 'uint256' },
          { internalType: 'uint256', name: 'assetsUSDC', type: 'uint256' },
          { internalType: 'uint256', name: 'eta', type: 'uint256' },
        ],
        internalType: 'struct Collector.WithdrawalParams',
        name: 'r',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address[]', name: 'users', type: 'address[]' },
      { internalType: 'address[]', name: 'vaults', type: 'address[]' },
      {
        components: [
          {
            internalType: 'address',
            name: 'baseAssetFallback',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'oracleUpdateInterval',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'redeemHandlingInterval',
            type: 'uint256',
          },
        ],
        internalType: 'struct Collector.Config[]',
        name: 'configs',
        type: 'tuple[]',
      },
    ],
    name: 'multiCollect',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'vault', type: 'address' },
          { internalType: 'address', name: 'baseAsset', type: 'address' },
          { internalType: 'address[]', name: 'assets', type: 'address[]' },
          { internalType: 'uint8[]', name: 'assetDecimals', type: 'uint8[]' },
          { internalType: 'uint256[]', name: 'assetPrices', type: 'uint256[]' },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'bool', name: 'isDepositQueue', type: 'bool' },
              { internalType: 'bool', name: 'isPausedQueue', type: 'bool' },
              { internalType: 'bool', name: 'isSignatureQueue', type: 'bool' },
              {
                internalType: 'uint256',
                name: 'pendingValue',
                type: 'uint256',
              },
              { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
            ],
            internalType: 'struct Collector.QueueInfo[]',
            name: 'queues',
            type: 'tuple[]',
          },
          { internalType: 'uint256', name: 'totalLP', type: 'uint256' },
          { internalType: 'uint256', name: 'limitLP', type: 'uint256' },
          { internalType: 'uint256', name: 'accountLP', type: 'uint256' },
          { internalType: 'uint256', name: 'totalBase', type: 'uint256' },
          { internalType: 'uint256', name: 'limitBase', type: 'uint256' },
          { internalType: 'uint256', name: 'accountBase', type: 'uint256' },
          { internalType: 'uint256', name: 'lpPriceBase', type: 'uint256' },
          { internalType: 'uint256', name: 'totalUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'limitUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'accountUSD', type: 'uint256' },
          { internalType: 'uint256', name: 'lpPriceUSD', type: 'uint256' },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'uint256', name: 'shares', type: 'uint256' },
              { internalType: 'uint256', name: 'assets', type: 'uint256' },
              { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
              { internalType: 'uint256', name: 'eta', type: 'uint256' },
            ],
            internalType: 'struct Collector.Request[]',
            name: 'deposits',
            type: 'tuple[]',
          },
          {
            components: [
              { internalType: 'address', name: 'queue', type: 'address' },
              { internalType: 'address', name: 'asset', type: 'address' },
              { internalType: 'uint256', name: 'shares', type: 'uint256' },
              { internalType: 'uint256', name: 'assets', type: 'uint256' },
              { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
              { internalType: 'uint256', name: 'eta', type: 'uint256' },
            ],
            internalType: 'struct Collector.Request[]',
            name: 'withdrawals',
            type: 'tuple[]',
          },
          { internalType: 'uint256', name: 'blockNumber', type: 'uint256' },
          { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
        ],
        internalType: 'struct Collector.Response[][]',
        name: 'responses',
        type: 'tuple[][]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'oracle',
    outputs: [
      { internalType: 'contract IPriceOracle', name: '', type: 'address' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'bufferSize_', type: 'uint256' }],
    name: 'setBufferSize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'oracle_', type: 'address' }],
    name: 'setOracle',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;
